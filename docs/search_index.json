[["index.html", "A Minimal Book Example Overview", " A Minimal Book Example John Doe 2023-04-12 Overview This is my website "],["database-structure.html", "Chapter 1 Database Structure 1.1 Describing the relational structures in Sandra Johnstons 2023 Greenhouse Experiment. 1.2 Build database tables 1.3 Read our CSV files and connect them", " Chapter 1 Database Structure 1.1 Describing the relational structures in Sandra Johnstons 2023 Greenhouse Experiment. In this section, I will describe the relational data structure used in Sandras 2023 Greenhouse experiment. I will then create a SQL database to establish these .csv connections. To begin - here is a photo showing the 3 main .csv files used in this research project and the ways in which they connect. Figure 1.1: Figure 1. Database Structure Sample_Location describes the Species, Treatment, and Location of the 48 samples in this research project. Germination lists germination counts taken every 3rd day for each sample for the length of the experiment. Germination relates to Sample_Location through the foreign key Species_Tmt_Pos. EC_Final shows the final soil salinity for each sample taken from the top and bottom of the sample pots. EC_Final relates to Sample_Location through the foreign key Species_Tmt_Pos. 1.2 Build database tables Here, I load the package, then I create a database and connect to it in the same line of code using dbConnect. library(DBI) ## Warning: package &#39;DBI&#39; was built under R version 4.1.3 Sandra_db &lt;- dbConnect(RSQLite::SQLite(), &quot;~/Experiments_R/Sandra_GH_2023/Sandra_db.db&quot;) Since we already created this database in an .R script, we will first delete any existing tables. dbExecute(Sandra_db, &quot;DROP TABLE Germination;&quot;) ## [1] 0 dbExecute(Sandra_db, &quot;DROP TABLE EC_Final;&quot;) ## [1] 0 dbExecute(Sandra_db, &quot;DROP TABLE Sample_Location;&quot;) ## [1] 0 Now we will build the Sample_Location table. dbExecute(Sandra_db, &quot;CREATE TABLE Sample_Location ( Species_Tmt_Pos varchar(15) NOT NULL, Species char(4) NOT NULL, Column integer(1) NOT NULL, Row integer(1) NOT NULL, Salinity varchar(5) NOT NULL, PRIMARY KEY(Species_Tmt_Pos) );&quot;) ## [1] 0 Next, we will build the Germination table. dbExecute(Sandra_db, &quot;CREATE TABLE Germination ( auto_id integer PRIMARY KEY AUTOINCREMENT, Species char(4) NOT NULL, Column integer(1) NOT NULL, Row integer(1) NOT NULL, Salinity varchar(5) NOT NULL, Date varchar(10) NOT NULL, Emergence integer NOT NULL, Observer char(2) NOT NULL, Notes varchar(150) NOT NULL, Checked_by char(2) NOT NULL, Species_Tmt_Pos varchar(15) NOT NULL, FOREIGN KEY (Species_Tmt_Pos) REFERENCES Sample_Location(Species_Tmt_Pos) );&quot;) ## [1] 0 Last, we will build the EC_Final table. dbExecute(Sandra_db, &quot;CREATE TABLE EC_Final( Sample varchar(8) NOT NULL, Start_Time varchar(12) NOT NULL, Soil_Weight_g double(10) NOT NULL, Water_Rate_mL double(10) NOT NULL, Time_of_Measurement varchar(12) NOT NULL, EC_microS_cm integer(6) NOT NULL, PSU double(4) NOT NULL, Temperature_C double(4) NOT NULL, ECe_microS_cm double(15) NOT NULL, ECe_dS_m double(4) NOT NULL, PSU_e double(4) NOT NULL, Target_Salinity varchar(5) NOT NULL, remeasure varchar(75), Species_Tmt_Pos varchar(15) NOT NULL, FOREIGN KEY (Species_Tmt_Pos) REFERENCES Sample_Location(Species_Tmt_Pos), PRIMARY KEY (Sample) );&quot;) ## [1] 0 Lets check these tables using dbGetQuery to ensure they meet our needs. dbGetQuery(Sandra_db, &quot;SELECT * FROM Sample_Location;&quot;) ## [1] Species_Tmt_Pos Species Column Row ## [5] Salinity ## &lt;0 rows&gt; (or 0-length row.names) dbGetQuery(Sandra_db, &quot;SELECT * FROM Germination;&quot;) ## [1] auto_id Species Column Row ## [5] Salinity Date Emergence Observer ## [9] Notes Checked_by Species_Tmt_Pos ## &lt;0 rows&gt; (or 0-length row.names) dbGetQuery(Sandra_db, &quot;SELECT * FROM EC_Final;&quot;) ## [1] Sample Start_Time Soil_Weight_g ## [4] Water_Rate_mL Time_of_Measurement EC_microS_cm ## [7] PSU Temperature_C ECe_microS_cm ## [10] ECe_dS_m PSU_e Target_Salinity ## [13] remeasure Species_Tmt_Pos ## &lt;0 rows&gt; (or 0-length row.names) 1.3 Read our CSV files and connect them Lets read in all of our .csv files. Sample_Location &lt;- read.csv(&quot;../Raw_Data/Sample_Location.csv&quot;) Germination &lt;- read.csv(&quot;../Raw_Data/Germination.csv&quot;) EC_Final &lt;- read.csv(&quot;../Raw_Data/EC_Final.csv&quot;) Now, we need to ensure that the column names match exactly the naming convention and order of the SQL tables. We will do this through the head() command, and then rearrange the columns as needed. head(Germination, 2) ## Species Column Row Salinity Date Emergence Observer ## 1 PHAU 1 1 Fresh 1/30/23 0 MH ## 2 SARU 1 1 Fresh 1/30/23 0 MH ## Notes ## 1 day 3 of exp. Water EC logged on probe. in col 1 grouping 1 (row 1), I logged SARU, then a mistake remove (potentially wrong spp), then correct remark for ALOC. Delete this middle rmeark. -MH ## 2 ## Checked_by Species_Tmt_Pos ## 1 SJ PHAU_Fresh_C1R1 ## 2 SJ SARU_Fresh_C1R1 Germination$auto_id &lt;- 1:nrow(Germination) Germination &lt;- Germination[, c(11, 1:10)] head(EC_Final, 2) ## Sample Species_Tmt_Pos Start_Time Soil_Weight_g Water_Rate_mL ## 1 SM-C-B2 1:24:00 PM 4.517 22.58 ## 2 C2-R3-DT DISP_40_C2R3 1:57:00 PM 10.304 51.52 ## Time_of_Measurement EC_microS_cm PSU Temperature_C ECe_microS_cm ECe_dS_m ## 1 1:33:00 PM 2660 NA NA NA ## 2 1:59:00 PM 27450 16.8 15.64 40406.4 40.41 ## PSU_e Target_Salinity remeasure ## 1 NA Adriennes ## 2 24.73 40 20210 micS/cm, 11.41 psu, na EC_Final &lt;- EC_Final[, c(1, 3:14, 2)] The EC_Final data is not entirely filled in yet. We will omit any rows with NA for the purposes of this assignment. EC_Final &lt;- na.omit(EC_Final) Now that our .csv files are neat and tidy, we can connect them to our database tables. dbWriteTable(Sandra_db, &quot;Germination&quot;, Germination, append = TRUE) dbWriteTable(Sandra_db, &quot;EC_Final&quot;, EC_Final, append = TRUE) dbWriteTable(Sandra_db, &quot;Sample_Location&quot;, Sample_Location, append = TRUE) As always, double check your work. dbGetQuery(Sandra_db, &quot;SELECT * FROM Sample_Location LIMIT 5;&quot;) ## Species_Tmt_Pos Species Column Row Salinity ## 1 PHAU_Fresh_C1R1 PHAU 1 1 Fresh ## 2 SARU_Fresh_C1R1 SARU 1 1 Fresh ## 3 DISP_Fresh_C1R1 DISP 1 1 Fresh ## 4 ALOC_Fresh_C1R1 ALOC 1 1 Fresh ## 5 PHAU_40_C1R2 PHAU 1 2 40 dbGetQuery(Sandra_db, &quot;SELECT * FROM Germination LIMIT 5;&quot;) ## auto_id Species Column Row Salinity Date Emergence Observer ## 1 1 PHAU 1 1 Fresh 1/30/23 0 MH ## 2 2 SARU 1 1 Fresh 1/30/23 0 MH ## 3 3 DISP 1 1 Fresh 1/30/23 0 MH ## 4 4 ALOC 1 1 Fresh 1/30/23 0 MH ## 5 5 PHAU 1 2 40 1/30/23 0 MH ## Notes ## 1 day 3 of exp. Water EC logged on probe. in col 1 grouping 1 (row 1), I logged SARU, then a mistake remove (potentially wrong spp), then correct remark for ALOC. Delete this middle rmeark. -MH ## 2 ## 3 ## 4 ## 5 ## Checked_by Species_Tmt_Pos ## 1 SJ PHAU_Fresh_C1R1 ## 2 SJ SARU_Fresh_C1R1 ## 3 SJ DISP_Fresh_C1R1 ## 4 SJ ALOC_Fresh_C1R1 ## 5 SJ PHAU_40_C1R2 dbGetQuery(Sandra_db, &quot;SELECT * FROM EC_Final LIMIT 5;&quot;) ## Sample Start_Time Soil_Weight_g Water_Rate_mL Time_of_Measurement ## 1 C2-R3-DT 1:57:00 PM 10.304 51.52 1:59:00 PM ## 2 C1-R4-ST 2:18:00 PM 7.778 38.90 2:45:00 PM ## 3 C1-R4-SB 2:21:00 PM 7.297 36.45 2:51:00 PM ## 4 C3-R4-AB 2:25:00 PM 8.166 40.83 2:53:00 PM ## 5 C3-R4-AT 2:27:00 PM 8.196 40.98 2:56:00 PM ## EC_microS_cm PSU Temperature_C ECe_microS_cm ECe_dS_m PSU_e Target_Salinity ## 1 27450 16.80 15.64 40406.40 40.41 24.73 40 ## 2 46170 29.99 15.53 51314.66 51.31 33.33 40 ## 3 46330 30.02 15.81 48249.39 48.25 31.26 40 ## 4 39840 25.34 16.05 46476.21 46.48 29.56 25 ## 5 22060 13.34 15.70 25829.11 25.83 15.62 25 ## remeasure Species_Tmt_Pos ## 1 20210 micS/cm, 11.41 psu, na DISP_40_C2R3 ## 2 16510 micS/cm, 9.63 psu, 20.51 C SARU_40_C1R4 ## 3 24170 micS/cm, 1475 psu, 20.76 C SARU_40_C1R4 ## 4 17190 micS/cm, 10.04 psu, 21.14 C ALOC_25_C3R4 ## 5 13680 micS/cm, 7.93 psu, 20.28 C ALOC_25_C3R4 "],["404.html", "Page not found", " Page not found The page you requested cannot be found (perhaps it was moved or renamed). You may want to try searching to find the page's new location, or use the table of contents to find the page you are looking for. "]]
